name: build
on:
  push:
    branches:
      - master
      - release
  pull_request:
concurrency:  
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["16.13.0", "18.2.0", "20.5.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache npm
        uses: actions/cache@v3
        env:
          cache-name: cache-npm
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
        env:
          HUSKY_SKIP_INSTALL: 1
      - name: Lint
        run: npm run lint
      - name: Test unit
        run: npm run test:unit
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.node }}
          path: coverage
          retention-days: 1
  test-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        node: ["16.13.0", "18.2.0", "20.5.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache npm
        uses: actions/cache@v3
        env:
          cache-name: cache-windows-npm
        with:
          path: ~\AppData\Roaming\npm-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          HUSKY_SKIP_INSTALL: 1
      - name: Test unit
        run: npm run test:unit
  quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: coverage-18.2.0
          path: coverage
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
